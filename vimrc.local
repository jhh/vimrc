nnoremap <Leader>b :CtrlPBuffer<cr>
nnoremap <Leader>m :CtrlPMRU<cr>
set title

" visual theme 
    " disable indent highlighting
    let g:indent_guides_enable_on_vim_startup = 0
	let g:onedark_terminal_italics=1
	colorscheme ir_black
	let g:airline_theme='dark'
	highlight Comment cterm=italic
" 

" vim-go configuration 
	" By default syntax-highlighting for Functions, Methods and Structs is
	" disabled
	let g:go_highlight_functions = 1
	let g:go_highlight_methods = 1
	let g:go_highlight_structs = 0
	let g:go_highlight_interfaces = 0
	let g:go_highlight_operators = 0
	let g:go_highlight_build_constraints = 1

	" Enable goimports to automatically insert import paths instead of gofmt
	let g:go_fmt_command = "goimports"

	" Auto :GoMetaLinter on save
	let g:go_metalinter_autosave = 1
	let g:go_metalinter_autosave_enabled = [
			\ 'vet', 'vetshadow', 'golint',
			\ 'ineffassign', 'goconst'
			\ ]

	" GoMetaLinter currently enabled linters
	let g:go_metalinter_deadline = "60s"
	let g:go_metalinter_enabled = [
			\ 'varcheck', 'staticcheck', 'aligncheck',
			\ 'interfacer', 'testify',
			\ 'gosimple', 'goconst', 'gotype',
			\ 'structcheck', 'ineffassign', 'vetshadow',
			\ 'dupl', 'errcheck', 'gocycle',
			\ 'golint', 'vet',
			\ 'unconvert', 'deadcode'
			\ ]
	" Show type info in status line
	let g:go_auto_type_info = 1
" 

 " Dash config 
    nmap <silent> <leader>d <Plug>DashSearch
    let g:dash_activate = 0
" 

augroup go_files 
    autocmd!
    " https://github.com/fatih/vim-go

    " Don't use default marker method
    autocmd filetype go setlocal foldmethod=indent
    autocmd filetype go set foldlevel=9

    " Settings

    " A tab is 8 spaces
    autocmd filetype go setlocal tabstop=8
    autocmd filetype go setlocal shiftwidth=8

    " Set local mappings
    autocmd filetype go nmap <buffer> <LocalLeader>r <Plug>(go-run)
    autocmd filetype go nmap <buffer> <LocalLeader>b <Plug>(go-install)
    autocmd filetype go nmap <buffer> <LocalLeader>t <Plug>(go-test)
    autocmd filetype go nmap <buffer> <LocalLeader>c <Plug>(go-coverage-toggle)
    autocmd filetype go nmap <buffer> <LocalLeader>a <Plug>(go-alternate-edit)

    " Mappings for definitions and declarations. By default, gd is mapped to
    " open the target identifier in current buffer.
    autocmd FileType go nmap <buffer> <LocalLeader>ds <Plug>(go-def-split)
    autocmd FileType go nmap <buffer> <LocalLeader>dv <Plug>(go-def-vertical)
    autocmd FileType go nmap <buffer> <LocalLeader>dt <Plug>(go-def-tab)

    " Open the revelevant documentation for the word under the cursor.
    " The default K (keywordprog) shortcut will godoc the word under the
    " cursor.
    autocmd FileType go nmap <buffer> <LocalLeader>gd <Plug>(go-doc)
    autocmd FileType go nmap <buffer> <LocalLeader>gv <Plug>(go-doc-vertical)
    autocmd FileType go nmap <buffer> <LocalLeader>gb <Plug>(go-doc-browser)

    " Show information for the word under the cursor.
    autocmd FileType go nmap <buffer> <LocalLeader>s <Plug>(go-implements)
    autocmd FileType go nmap <buffer> <LocalLeader>i <Plug>(go-info)

    " Rename the identifier under the cursor.
    autocmd FileType go nmap <buffer> <LocalLeader>e <Plug>(go-rename)
augroup end 

augroup invisible_chars 
    autocmd!

    " Show invisible characters in all of these files
    autocmd filetype vim setlocal list
    autocmd filetype python,rst setlocal list
    autocmd filetype ruby setlocal list
    autocmd filetype javascript,css setlocal list
    autocmd filetype go setlocal nolist
    autocmd filetype gitcommit setlocal nolist
augroup end 

